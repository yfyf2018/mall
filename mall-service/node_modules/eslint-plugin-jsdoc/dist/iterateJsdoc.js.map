{"version":3,"sources":["../src/iterateJsdoc.js"],"names":["parseComment","commentNode","indent","value","parsers","commentParser","PARSERS","parse_tag","parse_type","str","data","_","includes","tag","parse_name","parse_description","curryUtils","functionNode","jsdoc","tagNamePreference","exampleCodeRegex","rejectExampleCodeRegex","additionalTagNames","baseConfig","configFile","captionRequired","matchingFileName","eslintrcForExamples","allowInlineConfig","reportUnusedDisableDirectives","noDefaultExampleRules","allowOverrideWithoutParam","allowImplementsWithoutParam","allowAugmentsExtendsWithoutParam","ancestors","sourceCode","utils","getFunctionParameterNames","jsdocUtils","getFunctionSourceCode","getText","getJsdocParameterNamesDeep","getPreferredTagName","getJsdocParameterNames","name","getExampleCodeRegex","getRejectExampleCodeRegex","getMatchingFileName","isValidTag","hasTag","useEslintrcForExamples","hasNoDefaultExampleRules","getBaseConfig","getConfigFile","isCaptionRequired","isOverrideAllowedWithoutParam","isImplementsAllowedWithoutParam","isAugmentsExtendsAllowedWithoutParam","classHasTag","tagName","greatGrandParent","slice","greatGrandParentValue","getFirstToken","classJsdocNode","getJSDocComment","repeat","loc","start","column","classJsdoc","iterator","context","getSourceCode","get","Boolean","checkJsdoc","jsdocNode","getAncestors","report","message","fixer","jsdocLoc","lineNumber","line","end","colNumber","node","fix","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport commentParser from 'comment-parser';\nimport jsdocUtils from './jsdocUtils';\n\nconst parseComment = (commentNode, indent) => {\n  // Preserve JSDoc block start/end indentation.\n  return commentParser(indent + '/*' + commentNode.value + indent + '*/', {\n    // @see https://github.com/yavorskiy/comment-parser/issues/21\n    parsers: [\n      commentParser.PARSERS.parse_tag,\n      commentParser.PARSERS.parse_type,\n      (str, data) => {\n        if (_.includes(['return', 'returns', 'throws', 'exception'], data.tag)) {\n          return null;\n        }\n\n        return commentParser.PARSERS.parse_name(str, data);\n      },\n      commentParser.PARSERS.parse_description\n    ]\n  })[0] || {};\n};\n\nconst curryUtils = (\n  functionNode,\n  jsdoc,\n  tagNamePreference,\n  exampleCodeRegex,\n  rejectExampleCodeRegex,\n  additionalTagNames,\n  baseConfig,\n  configFile,\n  captionRequired,\n  matchingFileName,\n  eslintrcForExamples,\n  allowInlineConfig,\n  reportUnusedDisableDirectives,\n  noDefaultExampleRules,\n  allowOverrideWithoutParam,\n  allowImplementsWithoutParam,\n  allowAugmentsExtendsWithoutParam,\n  ancestors,\n  sourceCode\n) => {\n  const utils = {};\n\n  utils.getFunctionParameterNames = () => {\n    return jsdocUtils.getFunctionParameterNames(functionNode);\n  };\n\n  utils.getFunctionSourceCode = function () {\n    return sourceCode.getText(functionNode);\n  };\n\n  utils.getJsdocParameterNamesDeep = () => {\n    return jsdocUtils.getJsdocParameterNamesDeep(jsdoc, utils.getPreferredTagName('param'));\n  };\n\n  utils.getJsdocParameterNames = () => {\n    return jsdocUtils.getJsdocParameterNames(jsdoc, utils.getPreferredTagName('param'));\n  };\n\n  utils.getPreferredTagName = (name) => {\n    return jsdocUtils.getPreferredTagName(name, tagNamePreference);\n  };\n\n  utils.getExampleCodeRegex = () => {\n    return exampleCodeRegex;\n  };\n\n  utils.getRejectExampleCodeRegex = () => {\n    return rejectExampleCodeRegex;\n  };\n\n  utils.getMatchingFileName = () => {\n    return matchingFileName;\n  };\n\n  utils.isValidTag = (name) => {\n    return jsdocUtils.isValidTag(name, additionalTagNames);\n  };\n\n  utils.hasTag = (name) => {\n    return jsdocUtils.hasTag(jsdoc, name);\n  };\n\n  utils.useEslintrcForExamples = () => {\n    return eslintrcForExamples;\n  };\n\n  utils.allowInlineConfig = () => {\n    return allowInlineConfig;\n  };\n\n  utils.reportUnusedDisableDirectives = () => {\n    return reportUnusedDisableDirectives;\n  };\n\n  utils.hasNoDefaultExampleRules = () => {\n    return noDefaultExampleRules;\n  };\n\n  utils.getBaseConfig = () => {\n    return baseConfig;\n  };\n\n  utils.getConfigFile = () => {\n    return configFile;\n  };\n\n  utils.isCaptionRequired = () => {\n    return captionRequired;\n  };\n\n  utils.isOverrideAllowedWithoutParam = () => {\n    return allowOverrideWithoutParam;\n  };\n\n  utils.isImplementsAllowedWithoutParam = () => {\n    return allowImplementsWithoutParam;\n  };\n\n  utils.isAugmentsExtendsAllowedWithoutParam = () => {\n    return allowAugmentsExtendsWithoutParam;\n  };\n\n  utils.classHasTag = (tagName) => {\n    const greatGrandParent = ancestors.slice(-3)[0];\n    const greatGrandParentValue = greatGrandParent && sourceCode.getFirstToken(greatGrandParent).value;\n\n    if (greatGrandParentValue === 'class') {\n      const classJsdocNode = sourceCode.getJSDocComment(greatGrandParent);\n\n      if (classJsdocNode) {\n        const indent = _.repeat(' ', classJsdocNode.loc.start.column);\n        const classJsdoc = parseComment(classJsdocNode, indent);\n\n        if (jsdocUtils.hasTag(classJsdoc, tagName)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  return utils;\n};\n\nexport {\n  parseComment\n};\n\nexport default (iterator) => {\n  return (context) => {\n    const sourceCode = context.getSourceCode();\n    const tagNamePreference = _.get(context, 'settings.jsdoc.tagNamePreference') || {};\n    const exampleCodeRegex = _.get(context, 'settings.jsdoc.exampleCodeRegex') || null;\n    const rejectExampleCodeRegex = _.get(context, 'settings.jsdoc.rejectExampleCodeRegex') || null;\n    const matchingFileName = _.get(context, 'settings.jsdoc.matchingFileName') || null;\n    const additionalTagNames = _.get(context, 'settings.jsdoc.additionalTagNames') || {};\n    const baseConfig = _.get(context, 'settings.jsdoc.baseConfig') || {};\n    const configFile = _.get(context, 'settings.jsdoc.configFile');\n    const eslintrcForExamples = _.get(context, 'settings.jsdoc.eslintrcForExamples') !== false;\n    const allowInlineConfig = _.get(context, 'settings.jsdoc.allowInlineConfig') !== false;\n    const reportUnusedDisableDirectives = _.get(context, 'settings.jsdoc.reportUnusedDisableDirectives') !== false;\n    const captionRequired = Boolean(_.get(context, 'settings.jsdoc.captionRequired'));\n    const noDefaultExampleRules = Boolean(_.get(context, 'settings.jsdoc.noDefaultExampleRules'));\n    const allowOverrideWithoutParam = Boolean(_.get(context, 'settings.jsdoc.allowOverrideWithoutParam'));\n    const allowImplementsWithoutParam = Boolean(_.get(context, 'settings.jsdoc.allowImplementsWithoutParam'));\n    const allowAugmentsExtendsWithoutParam = Boolean(_.get(context, 'settings.jsdoc.allowAugmentsExtendsWithoutParam'));\n\n    const checkJsdoc = (functionNode) => {\n      const jsdocNode = sourceCode.getJSDocComment(functionNode);\n\n      if (!jsdocNode) {\n        return;\n      }\n\n      const ancestors = context.getAncestors();\n\n      const indent = _.repeat(' ', jsdocNode.loc.start.column);\n\n      const jsdoc = parseComment(jsdocNode, indent);\n\n      const report = (message, fixer = null, jsdocLoc = null) => {\n        let loc;\n\n        if (jsdocLoc) {\n          const lineNumber = jsdocNode.loc.start.line + jsdocLoc.line;\n\n          loc = {\n            end: {line: lineNumber},\n            start: {line: lineNumber}\n          };\n          if (jsdocLoc.column) {\n            const colNumber = jsdocNode.loc.start.column + jsdocLoc.column;\n\n            loc.end.column = colNumber;\n            loc.start.column = colNumber;\n          }\n        }\n        if (fixer === null) {\n          context.report({\n            loc,\n            message,\n            node: jsdocNode\n          });\n        } else {\n          context.report({\n            fix: fixer,\n            loc,\n            message,\n            node: jsdocNode\n          });\n        }\n      };\n\n      const utils = curryUtils(\n        functionNode,\n        jsdoc,\n        tagNamePreference,\n        exampleCodeRegex,\n        rejectExampleCodeRegex,\n        additionalTagNames,\n        baseConfig,\n        configFile,\n        captionRequired,\n        matchingFileName,\n        eslintrcForExamples,\n        allowInlineConfig,\n        reportUnusedDisableDirectives,\n        noDefaultExampleRules,\n        allowOverrideWithoutParam,\n        allowImplementsWithoutParam,\n        allowAugmentsExtendsWithoutParam,\n        ancestors,\n        sourceCode\n      );\n\n      iterator({\n        context,\n        functionNode,\n        indent,\n        jsdoc,\n        jsdocNode,\n        report,\n        sourceCode,\n        utils\n      });\n    };\n\n    return {\n      ArrowFunctionExpression: checkJsdoc,\n      FunctionDeclaration: checkJsdoc,\n      FunctionExpression: checkJsdoc\n    };\n  };\n};\n"],"file":"iterateJsdoc.js"}