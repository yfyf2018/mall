{"version":3,"sources":["../../src/rules/validTypes.js"],"names":["jsdoc","report","_","forEach","tags","tag","type","error","name"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;eAEe,2BAAa,gBAGtB;AAAA,MAFJA,KAEI,QAFJA,KAEI;AAAA,MADJC,MACI,QADJA,MACI;;AACJC,kBAAEC,OAAF,CAAUH,KAAK,CAACI,IAAhB,EAAsB,UAACC,GAAD,EAAS;AAC7B,QAAIA,GAAG,CAACC,IAAR,EAAc;AACZ,UAAI;AACF,oCAAMD,GAAG,CAACC,IAAV;AACD,OAFD,CAEE,OAAOC,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,aAAnB,EAAkC;AAChCP,UAAAA,MAAM,CAAC,2BAA2BI,GAAG,CAACC,IAAhC,EAAsC,IAAtC,EAA4CD,GAA5C,CAAN;AACD;AACF;AACF;AACF,GAVD;AAWD,CAfc,C","sourcesContent":["import _ from 'lodash';\nimport {parse} from 'jsdoctypeparser';\nimport iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report\n}) => {\n  _.forEach(jsdoc.tags, (tag) => {\n    if (tag.type) {\n      try {\n        parse(tag.type);\n      } catch (error) {\n        if (error.name === 'SyntaxError') {\n          report('Syntax error in type: ' + tag.type, null, tag);\n        }\n      }\n    }\n  });\n});\n"],"file":"validTypes.js"}